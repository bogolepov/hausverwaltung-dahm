---

type TMenuItem = { name: string, url: string};
const Menu: Array<TMenuItem> = [ {name: 'Startseite', url: ''}, {name: 'Service', url: 'service'}, {name: 'Team', url: 'team'}, {name: 'Objekte', url: 'objekte'}, {name: 'Kontakt', url: 'kontakt'}];

const pathname: string = new URL(Astro.request.url).pathname;
const currentPath: string[] = pathname.split("/").filter(Boolean);

import BurgerButton from "@components/burger_button/burger_button.astro";

import Dahm from "@data/dahm.json"

import { Icon } from 'astro-icon/components'
---

<style>
  header {
    width: 100%;
    /* height: clamp(2.5em, 5.2vw, 3.5em); */
    height: min-content;
    max-width: 100vw;
    top: 0;
    align-items: center;
    z-index: 100;
    position: fixed;
    -webkit-backdrop-filter: blur(9px);
    /* background-color: rgba(220, 220, 220, 0.457); */
    /* background-color: rgba(206, 202, 192, 0.45); */
    backdrop-filter: blur(9px);
    font-weight: 500;
  }
  @supports (font-variation-settings: 'wdth' 115) {
    header {
      font-size: calc(var(--font-size) * 0.85);
      font-weight: 540;
      font-stretch: 103%;
      font-optical-sizing: auto;
    }
  }
  ul.nav-list {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    list-style: none;
    align-items: center;
    height: 100%;
    color: #373737;
  }
  ul.nav-list > li {
    padding: 0 0.65em;
  }
  ul.nav-list li {
    padding-top: 0.15em;
    padding-bottom: 0.15em;
  }

  .menu-item-desktop {
    display: none;
  }
  .menu-item-desktop a {
    padding: 0.15em 0;
  }
  .logo {
    margin: auto 0;
    padding: 0.4em 1em;

  }
  .nav-logo-text {
    display: block;
    width: calc(var(--font-size) * 3.5);
  }
  .logo svg {
    height: var(--header-height);
  }
  .h2em {
    min-height: 2.25em;
    min-width: 2.25em;
  }
  .round-border {
    border: 1px solid #3737375d;
    border-radius: 9999px;
  }
  .phone-number-text {
    padding: 0.2em 0.5em;
    display: none;
  }
  @media screen and (min-width: 650px) {
    .phone-icon {
      display: none;
    }
    .phone-number-text {
      display: block;
    }
  }
  .phone-number svg,
  .email-address svg {
    width: 2em;
    height: 1.15em;
  }
  header a.active_link {
    border-bottom: 1.5px solid var(--color-marker);
  }
  .menu-mobile {
    display: block;
  } 
  .menu-mobile > .round-border {
      padding: 0 0.5em;
  } 
  .global-menu-layer {
    display: none;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    /* height: 100%; */
    bottom: 0;
    z-index: 90;
    /* background-color: antiquewhite; */
    background-color: #a4a4a464;
    -webkit-backdrop-filter: blur(15px);
    backdrop-filter: blur(15px);
  }

  ul.global-menu {
    display: flex;
    flex-direction: column;
    gap: 0.6em;
    /* text-align: right; */
    align-items: start;
    padding: calc(var(--header-height) + 1em ) 0.65em 0.8em 0.7em;
    font-size: calc(var(--font-size) * 1.3);
  }
  .global-menu a {
    padding-left: calc(0.6em + 3px);
  }
  .global-menu a.active_link {
    padding-left: 0.6em;
    border-left: 3px solid var(--color-marker);
  }
  @media screen and (max-width: 555px) {
    body:has(#burger-button:checked) .global-menu-layer {
      display: block;
    }
  }
  @media screen and (min-width: 555px) {
    .menu-item-desktop {
      display: block;
    }
    .menu-mobile {
      display: none;
    }
    .global-menu-layer {
      display: none;
    }
    li:has(.email-address) {
      padding-right: 1.5em;
    }
  }

  li,
  li * {
    transition:
			color 400ms ease-out,
			fill 400ms ease-out,
      border-color 400ms ease-out;
  }

  @media (hover: hover) {
    li:hover,
    li:hover * {
      transition:
        color 500ms ease-out,
        fill 500ms ease-out,
        border-color 500ms ease-out;
      color: var(--color-dahm-bordo);
      fill: var(--color-dahm-bordo);
      border-color: var(--color-dahm-bordo);
    }
    /* .fv:hover {
      box-shadow: 1px 2px 6px #6060607a;
    } */
  }

  a:focus-visible {
    outline: none;
  }
  a:focus-visible .fv,
  .fv:focus-visible,
  .fv:has(a:focus-visible),
  .fv:has(input:focus-visible) {
    outline: 1px solid var(--color-dahm-bordo);
    outline-offset: 0;
  }

</style>

<header>
  <nav>
    <ul class="nav-list">
      <li class="logo">
        <a href={"/"} aria-label={Dahm.company_name}>
          <Icon name="logo-text" class="nav-logo-text fv" size="1rem" />
        </a>
      </li>
      {
        Menu.map(menuItem => {
          return(
            <li class="menu-item-desktop fv"><a href={"/" + menuItem.url} class:list={[{active_link: (currentPath.length === 0 && menuItem.url === '') || (currentPath.length > 0 && currentPath[0] === menuItem.url) }]}>{menuItem.name.toUpperCase()}</a></li>
          );
        })
      }
      <li class="flex-spreader"></li>
      <li>
        <a class="flex-center round-border h2em phone-number fv" href={"tel: " + Dahm.telephone}>
          <span class="phone-number-text">{Dahm.telephone}</span>
          <Icon name="phone" class="phone-icon" />
        </a>
      </li>
      <li>
        <a class="flex-center round-border h2em email-address fv" href={"mailto: " + Dahm.email}>
          <Icon name="email" />
        </a>        
      </li>
      <li class="menu-mobile">
        <div class="flex-center round-border h2em fv" ><BurgerButton id="burger-button"/></div>
      </li>
    </ul>
  </nav>
</header>
<nav>
  <div class="global-menu-layer">
    <ul class="global-menu">
    {
      Menu.map(menuItem => {
        return(
          <li class="fv"><a href={"/" + menuItem.url} class:list={[{active_link: (currentPath.length === 0 && menuItem.url === '') || (currentPath.length > 0 && currentPath[0] === menuItem.url) }]}>{menuItem.name}</a></li>
        );
      })
    }
    </ul>
  </div>
</nav>